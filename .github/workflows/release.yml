name: Release APK Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Create keystore file
      env:
        KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
      run: |
        if [ -n "$KEYSTORE_FILE" ]; then
          echo "$KEYSTORE_FILE" | base64 -d > keystore.jks
        else
          echo "Warning: KEYSTORE_FILE secret not found. Creating debug build instead."
        fi

    - name: Create keystore.properties file
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
        KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
      run: |
        if [ -n "$KEYSTORE_PASSWORD" ] && [ -n "$KEYSTORE_ALIAS" ] && [ -n "$KEYSTORE_KEY_PASSWORD" ]; then
          echo "storeFile=../keystore.jks" > keystore.properties
          echo "storePassword=$KEYSTORE_PASSWORD" >> keystore.properties
          echo "keyAlias=$KEYSTORE_ALIAS" >> keystore.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> keystore.properties
          echo "BUILD_TYPE=release" >> $GITHUB_ENV
        else
          echo "Warning: Keystore secrets not found. Building debug version."
          echo "BUILD_TYPE=debug" >> $GITHUB_ENV
        fi

    - name: Build APK
      run: |
        if [ "$BUILD_TYPE" = "release" ]; then
          ./gradlew assembleRelease
          echo "APK_PATH=app/build/outputs/apk/release/app-release.apk" >> $GITHUB_ENV
          echo "APK_NAME=app-release" >> $GITHUB_ENV
        else
          ./gradlew assembleDebug  
          echo "APK_PATH=app/build/outputs/apk/debug/app-debug.apk" >> $GITHUB_ENV
          echo "APK_NAME=app-debug" >> $GITHUB_ENV
        fi

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APK_NAME }}-${{ github.run_number }}
        path: ${{ env.APK_PATH }}

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/') && env.BUILD_TYPE == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.APK_PATH }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Crypto-Ko Release ${{ github.ref_name }}
          
          ### üì± APK Download
          - **app-release.apk** - Signed release build for Android
          
          ### üîß Installation
          1. Download the APK file
          2. Enable "Install from Unknown Sources" in Android settings
          3. Install the APK
          
          ### ‚ö†Ô∏è Security Note  
          This APK is signed and verified. Always download from official GitHub releases only.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}